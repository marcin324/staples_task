{"version":3,"sources":["CartForm.js","Product.js","ProductList.js","Form.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["CartForm","props","react_default","a","createElement","className","type","value","activeInput","onChange","e","handleNumberOfItems","product","id","onClick","handleAddToCart","Product","modal","isActive","overlay","close","img","description","general","replace","handleShowModal","src","images","primary","large","alt","name","presentable_id","src_CartForm","shoppingCart","products","concat","handleHideModal","brand","ProductList","map","src_Product","key","Form","onSubmit","handleSubmit","htmlFor","placeholder","handleSearchText","searchText","Cart","class","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePageChange","pageNumber","setState","activePage","state","length","fetch","then","response","json","data","lastIndex","itemsCountPerPage","firstIndex","slice","catch","error","console","log","url","target","preventDefault","searchProducts","toConsumableArray","filter","selectedProduct","parseInt","prevState","_this2","status","Error","src_Form","componentDidMount","bind","src_Cart","Pagination_default","totalItemsCount","pageRangeDisplayed","src_ProductList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAoBeA,EAlBE,SAAAC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLC,MAAON,EAAMO,YACbC,SAAU,SAAAC,GAAC,OAAIT,EAAMU,oBAAoBD,EAAGT,EAAMW,QAAQC,QAG9DX,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMb,EAAMc,gBAAgBd,EAAMW,QAAQC,MAA3D,iBCiESG,EA3EC,SAAAf,GACd,IAAMO,EAAoC,KAAtBP,EAAMO,YAAqBP,EAAMO,YAAc,GAE7DS,EAAQhB,EAAMiB,SAAW,OAAS,GAClCC,EAAUlB,EAAMiB,SAAW,OAAS,GACpCE,EAAQnB,EAAMiB,SAAW,YAAc,GACvCG,EAAMpB,EAAMiB,SAAW,MAAQ,GAG/BI,EADOrB,EAAMW,QAAQW,QAAQD,YACVE,QAAQ,iCAAkC,IAEnE,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OACEU,QAAS,kBAAMb,EAAMwB,gBAAgBxB,EAAMW,QAAQC,KACnDa,IAAKzB,EAAMW,QAAQe,OAAOC,QAAQC,MAClCC,IAAK7B,EAAMW,QAAQW,QAAQQ,QAG/B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVS,QAAS,kBAAMb,EAAMwB,gBAAgBxB,EAAMW,QAAQC,MAEnDX,EAAAC,EAAAC,cAAA,SAAIH,EAAMW,QAAQW,QAAQQ,OAE5B7B,EAAAC,EAAAC,cAAA,gBAAQH,EAAMW,QAAQW,QAAQS,gBAC9B9B,EAAAC,EAAAC,cAAC6B,EAAD,CACEC,aAAcjC,EAAMiC,aACpBvB,oBAAqBV,EAAMU,oBAC3BI,gBAAiBd,EAAMc,gBACvBH,QAASX,EAAMW,QACfuB,SAAUlC,EAAMkC,SAChB3B,YAAaA,MAKnBN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAA+B,OAAajB,IACzBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,SAAA+B,OAAWnB,IACvBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QACEC,UAAS,YAAA+B,OAAchB,GACvBN,QAAS,kBAAMb,EAAMoC,gBAAgBpC,EAAMW,QAAQC,MAFrD,KAMAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAA+B,OAAKf,GACdK,IAAKzB,EAAMW,QAAQe,OAAOC,QAAQC,MAClCC,IAAK7B,EAAMW,QAAQW,QAAQQ,QAG/B7B,EAAAC,EAAAC,cAAA,SAAIH,EAAMW,QAAQ0B,MAAMP,MACxB7B,EAAAC,EAAAC,cAAA,SAAIH,EAAMW,QAAQW,QAAQQ,MAC1B7B,EAAAC,EAAAC,cAAA,SAAIkB,GACJpB,EAAAC,EAAAC,cAAA,gBAAQH,EAAMW,QAAQW,QAAQS,gBAC9B9B,EAAAC,EAAAC,cAAC6B,EAAD,CACEC,aAAcjC,EAAMiC,aACpBvB,oBAAqBV,EAAMU,oBAC3BI,gBAAiBd,EAAMc,gBACvBH,QAASX,EAAMW,QACfuB,SAAUlC,EAAMkC,SAChB3B,YAAaA,SC/CZ+B,EAnBK,SAAAtC,GAClB,IAAMkC,EAAWlC,EAAMkC,SAASK,IAAI,SAAA5B,GAAO,OACzCV,EAAAC,EAAAC,cAACqC,EAAD,CACEC,IAAK9B,EAAQC,GACbsB,SAAUlC,EAAMkC,SAChBvB,QAASA,EACTM,SAAUN,EAAQM,SAClBO,gBAAiBxB,EAAMwB,gBACvBY,gBAAiBpC,EAAMoC,gBACvBH,aAAcjC,EAAMiC,aACpBvB,oBAAqBV,EAAMU,oBAC3BI,gBAAiBd,EAAMc,gBACvBP,YAAaI,EAAQJ,gBAIzB,OAAON,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8B,ICEhBQ,EAnBF,SAAA1C,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMwC,SAAU,SAAAlC,GAAC,OAAIT,EAAM4C,aAAanC,KACtCR,EAAAC,EAAAC,cAAA,SAAO0C,QAAQ,cAAf,mBACA5C,EAAAC,EAAAC,cAAA,SACE2C,YAAY,sBACZzC,KAAK,OACLO,GAAG,aACHJ,SAAU,SAAAC,GAAC,OAAIT,EAAM+C,iBAAiBtC,IACtCH,MAAON,EAAMgD,aAEf/C,EAAAC,EAAAC,cAAA,UAAQwC,SAAU,SAAAlC,GAAC,OAAIT,EAAM4C,aAAanC,KAA1C,UACAR,EAAAC,EAAAC,cAAA,UAAQU,QAASb,EAAMa,SAAvB,eCFOoC,EAXF,SAAAjD,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZJ,EAAMiC,aACPhC,EAAAC,EAAAC,cAAA,KAAG+C,MAAM,4CC0LFC,2BAxLb,SAAAA,EAAYnD,GAAO,IAAAoD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvD,KAqCR2D,iBAAmB,SAAAC,GACjBR,EAAKS,SAAS,CAAEC,WAAYF,IADG,IAEvBZ,EAAeI,EAAKW,MAApBf,WACR,GAAIA,EAAWgB,OAAS,EAAG,CAEzBC,MADY,6CAETC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,IAAMC,EAAYlB,EAAKW,MAAMD,WAAaV,EAAKmB,kBACzCC,EAAaF,EAAYlB,EAAKmB,kBACpCnB,EAAKS,SAAS,CACZ3B,SAAUmC,EAAKI,MAAMD,EAAYF,OAGpCI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SACzB,CACL,IAAMG,EAAG,oCAAA3C,OAAuCa,EAAvC,eACTiB,MAAMa,GACHZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,IAAMC,EAAYlB,EAAKW,MAAMD,WAAaV,EAAKmB,kBACzCC,EAAaF,EAAYlB,EAAKmB,kBACpCnB,EAAKS,SAAS,CACZ3B,SAAUmC,EAAKI,MAAMD,EAAYF,SA7DxBlB,EAmEnBL,iBAAmB,SAAAtC,GACjB2C,EAAKS,SAAS,CAAEb,WAAYvC,EAAEsE,OAAOzE,SApEpB8C,EAuEnBR,aAAe,SAAAnC,GACbA,EAAEuE,iBADgB,IAEVhC,EAAeI,EAAKW,MAApBf,WACR,KAAIA,EAAWgB,OAAS,GAAxB,CAEE,IAAMc,EAAG,oCAAA3C,OAAuCa,EAAvC,eACTiB,MAAMa,GACHZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJjB,EAAKS,SAAS,CACZoB,eAAgBZ,EAAKL,SAEvB,IAAMM,EAAYlB,EAAKW,MAAMD,WAAaV,EAAKmB,kBACzCC,EAAaF,EAAYlB,EAAKmB,kBACpCnB,EAAKS,SAAS,CACZ3B,SAAUmC,EAAKI,MAAMD,EAAYF,GACjCtB,WAAY,SAvFHI,EA6FnB5B,gBAAkB,SAAAZ,GAChB,IAAIsB,EAAQmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKW,MAAM7B,UACxBvB,EAAUuB,EAASiD,OAAO,SAAAxE,GAAO,OAAIA,EAAQC,KAAOA,IAC1DD,EAAQ,GAAGM,UAAW,EACtB,IAAMmE,EAAkBzE,EAAQ,GAChCuB,EAASuC,MAAM7D,EAAI,EAAGwE,GACtBhC,EAAKS,SAAS,CACZ3B,cApGekB,EAwGnBhB,gBAAkB,SAAAxB,GAChB,IAAIsB,EAAQmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKW,MAAM7B,UACxBvB,EAAUuB,EAASiD,OAAO,SAAAxE,GAAO,OAAIA,EAAQC,KAAOA,IAC1DD,EAAQ,GAAGM,SAAW,GACtB,IAAMmE,EAAkBzE,EAAQ,GAChCuB,EAASuC,MAAM7D,EAAI,EAAGwE,GACtBhC,EAAKS,SAAS,CACZ3B,cA/GekB,EAmHnB1C,oBAAsB,SAACD,EAAGG,GACxB,IAAIsB,EAAQmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKW,MAAM7B,UACxBvB,EAAUuB,EAASiD,OAAO,SAAAxE,GAAO,OAAIA,EAAQC,KAAOA,IAC1DwC,EAAK7C,YAAcE,EAAEsE,OAAOzE,MAC5BK,EAAQ,GAAGJ,YAAc6C,EAAK7C,YAC9B,IAAM6E,EAAkBzE,EAAQ,GAChCuB,EAASuC,MAAM7D,EAAI,EAAGwE,GACtBhC,EAAKS,SAAS,CACZ3B,cA3HekB,EA+HnBtC,gBAAkB,SAAAF,GAChB,GAAKwC,EAAK7C,eAAe6C,EAAK7C,YAAc,GAA5C,CAEE,IAAI2B,EAAQmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKW,MAAM7B,UACxB3B,EAAc8E,SAASjC,EAAK7C,aAClC6C,EAAKS,SAAS,SAAAyB,GAAS,MAAK,CAC1BrD,aAAcqD,EAAUrD,aAAe1B,KAEzC,IAAMI,EAAUuB,EAASiD,OAAO,SAAAxE,GAAO,OAAIA,EAAQC,KAAOA,IAC1DwC,EAAK7C,YAAc,GACnBI,EAAQ,GAAGJ,YAAc6C,EAAK7C,YAC9B,IAAM6E,EAAkBzE,EAAQ,GAChCuB,EAASuC,MAAM7D,EAAI,EAAGwE,GACtBhC,EAAKS,SAAS,CACZ3B,eA3IJkB,EAAKW,MAAQ,CACX7B,SAAU,GACV+C,eAAgB,EAChBjC,WAAY,GACZc,WAAY,EACZ7B,aAAc,GAEhBmB,EAAK7C,YAAc,GACnB6C,EAAKnC,SAAW,GAChBmC,EAAKmB,kBAAoB,GAXRnB,mFAcC,IAAAmC,EAAAhC,KAElBU,MADS,6CAENC,KAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASqB,OACX,OAAOrB,EAET,MAAMsB,MAAMtB,EAASqB,UAEtBtB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJkB,EAAK1B,SAAS,CACZoB,eAAgBZ,EAAKL,OACrBF,WAAY,IAEd,IAAMQ,EAAYiB,EAAKxB,MAAMD,WAAayB,EAAKhB,kBACzCC,EAAaF,EAAYiB,EAAKhB,kBACpCgB,EAAK1B,SAAS,CACZ3B,SAAUmC,EAAKI,MAAMD,EAAYF,OAGpCI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,sCA+GvB,IACCzC,EAAaqB,KAAKQ,MAAlB7B,SACR,OACEjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuF,EAAD,CACE1C,WAAYO,KAAKQ,MAAMf,WACvBJ,aAAcW,KAAKX,aACnBG,iBAAkBQ,KAAKR,iBACvBlC,QAAS0C,KAAKoC,kBAAkBC,KAAKrC,QAEvCtD,EAAAC,EAAAC,cAAC0F,EAAD,CAAM5D,aAAcsB,KAAKQ,MAAM9B,eAC/BhC,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CACE4D,WAAYP,KAAKQ,MAAMD,WACvBS,kBAAmBhB,KAAKgB,kBACxBwB,gBAAiBxC,KAAKQ,MAAMkB,eAC5Be,mBAAoB,EACpBxF,SAAU+C,KAAKI,mBAEjB1D,EAAAC,EAAAC,cAAC8F,EAAD,CACE/D,SAAUA,EACVV,gBAAiB+B,KAAK/B,gBACtBY,gBAAiBmB,KAAKnB,gBACtBH,aAAcsB,KAAKQ,MAAM9B,aACzBvB,oBAAqB6C,KAAK7C,oBAC1BI,gBAAiByC,KAAKzC,kBAExBb,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CACE4D,WAAYP,KAAKQ,MAAMD,WACvBS,kBAAmBhB,KAAKgB,kBACxBwB,gBAAiBxC,KAAKQ,MAAMkB,eAC5Be,mBAAoB,EACpBxF,SAAU+C,KAAKI,2BAlLPuC,cCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOxG,EAAAC,EAAAC,cAACuG,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,KAAK,SAAA8C,GACjCA,EAAaC","file":"static/js/main.38f38160.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CartForm = props => {\r\n  return (\r\n    <div className=\"cart_form\">\r\n      <form>\r\n        <label>Quantity:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={props.activeInput}\r\n          onChange={e => props.handleNumberOfItems(e, props.product.id)}\r\n        />\r\n      </form>\r\n      <button onClick={() => props.handleAddToCart(props.product.id)}>\r\n        Add to cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartForm;\r\n","import React from \"react\";\r\nimport CartForm from \"./CartForm\";\r\n\r\nconst Product = props => {\r\n  const activeInput = props.activeInput !== \"\" ? props.activeInput : \"\";\r\n\r\n  const modal = props.isActive ? \"show\" : \"\";\r\n  const overlay = props.isActive ? \"show\" : \"\";\r\n  const close = props.isActive ? \"btn_close\" : \"\";\r\n  const img = props.isActive ? \"img\" : \"\";\r\n\r\n  const json = props.product.general.description;\r\n  const description = json.replace(/<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi, \"\");\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <div className=\"product_item\">\r\n        <div className=\"image_item img-thumbnail\">\r\n          <img\r\n            onClick={() => props.handleShowModal(props.product.id)}\r\n            src={props.product.images.primary.large}\r\n            alt={props.product.general.name}\r\n          />\r\n        </div>\r\n        <div className=\"content\">\r\n          <button\r\n            className=\"btn_show_modal\"\r\n            onClick={() => props.handleShowModal(props.product.id)}\r\n          >\r\n            <p>{props.product.general.name}</p>\r\n          </button>\r\n          <p>ID: {props.product.general.presentable_id}</p>\r\n          <CartForm\r\n            shoppingCart={props.shoppingCart}\r\n            handleNumberOfItems={props.handleNumberOfItems}\r\n            handleAddToCart={props.handleAddToCart}\r\n            product={props.product}\r\n            products={props.products}\r\n            activeInput={activeInput}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`overlay ${overlay}`}>\r\n        <div className={`modal ${modal}`}>\r\n          <div className=\"modal_content\">\r\n            <span\r\n              className={`btn_hide ${close}`}\r\n              onClick={() => props.handleHideModal(props.product.id)}\r\n            >\r\n              x\r\n            </span>\r\n            <div className=\"image\">\r\n              <img\r\n                className={`${img}`}\r\n                src={props.product.images.primary.large}\r\n                alt={props.product.general.name}\r\n              />\r\n            </div>\r\n            <p>{props.product.brand.name}</p>\r\n            <p>{props.product.general.name}</p>\r\n            <p>{description}</p>\r\n            <p>ID: {props.product.general.presentable_id}</p>\r\n            <CartForm\r\n              shoppingCart={props.shoppingCart}\r\n              handleNumberOfItems={props.handleNumberOfItems}\r\n              handleAddToCart={props.handleAddToCart}\r\n              product={props.product}\r\n              products={props.products}\r\n              activeInput={activeInput}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nconst ProductList = props => {\r\n  const products = props.products.map(product => (\r\n    <Product\r\n      key={product.id}\r\n      products={props.products}\r\n      product={product}\r\n      isActive={product.isActive}\r\n      handleShowModal={props.handleShowModal}\r\n      handleHideModal={props.handleHideModal}\r\n      shoppingCart={props.shoppingCart}\r\n      handleNumberOfItems={props.handleNumberOfItems}\r\n      handleAddToCart={props.handleAddToCart}\r\n      activeInput={product.activeInput}\r\n    />\r\n  ));\r\n\r\n  return <div className=\"app\">{products}</div>;\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={e => props.handleSubmit(e)}>\r\n        <label htmlFor=\"searchText\">Search product:</label>\r\n        <input\r\n          placeholder=\"search for anything\"\r\n          type=\"text\"\r\n          id=\"searchText\"\r\n          onChange={e => props.handleSearchText(e)}\r\n          value={props.searchText}\r\n        />\r\n        <button onSubmit={e => props.handleSubmit(e)}>Search</button>\r\n        <button onClick={props.onClick}>Show all</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Cart = props => {\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"cart_number\">\r\n        {props.shoppingCart}\r\n        <i class=\"fas fa-shopping-cart\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { Component } from \"react\";\nimport ProductList from \"./ProductList\";\nimport Form from \"./Form\";\nimport Cart from \"./Cart\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      searchProducts: 0,\n      searchText: \"\",\n      activePage: 0,\n      shoppingCart: 0\n    };\n    this.activeInput = \"\";\n    this.isActive = \"\";\n    this.itemsCountPerPage = 10;\n  }\n\n  componentDidMount() {\n    const API = `http://localhost:3005/products?_limit=140`;\n    fetch(API)\n      .then(response => {\n        if (response.status === 200) {\n          return response;\n        }\n        throw Error(response.status);\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          searchProducts: data.length,\n          activePage: 1\n        });\n        const lastIndex = this.state.activePage * this.itemsCountPerPage;\n        const firstIndex = lastIndex - this.itemsCountPerPage;\n        this.setState({\n          products: data.slice(firstIndex, lastIndex)\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handlePageChange = pageNumber => {\n    this.setState({ activePage: pageNumber });\n    const { searchText } = this.state;\n    if (searchText.length < 3) {\n      const API = \"http://localhost:3005/products?_limit=140\";\n      fetch(API)\n        .then(response => response.json())\n        .then(data => {\n          const lastIndex = this.state.activePage * this.itemsCountPerPage;\n          const firstIndex = lastIndex - this.itemsCountPerPage;\n          this.setState({\n            products: data.slice(firstIndex, lastIndex)\n          });\n        })\n        .catch(error => console.log(error));\n    } else {\n      const url = `http://localhost:3005/products?q=${searchText}&_limit=140`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          const lastIndex = this.state.activePage * this.itemsCountPerPage;\n          const firstIndex = lastIndex - this.itemsCountPerPage;\n          this.setState({\n            products: data.slice(firstIndex, lastIndex)\n          });\n        });\n    }\n  };\n\n  handleSearchText = e => {\n    this.setState({ searchText: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { searchText } = this.state;\n    if (searchText.length < 3) return;\n    else {\n      const url = `http://localhost:3005/products?q=${searchText}&_limit=140`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            searchProducts: data.length\n          });\n          const lastIndex = this.state.activePage * this.itemsCountPerPage;\n          const firstIndex = lastIndex - this.itemsCountPerPage;\n          this.setState({\n            products: data.slice(firstIndex, lastIndex),\n            searchText: \"\"\n          });\n        });\n    }\n  };\n\n  handleShowModal = id => {\n    let products = [...this.state.products];\n    const product = products.filter(product => product.id === id);\n    product[0].isActive = true;\n    const selectedProduct = product[0];\n    products.slice(id, 1, selectedProduct);\n    this.setState({\n      products\n    });\n  };\n\n  handleHideModal = id => {\n    let products = [...this.state.products];\n    const product = products.filter(product => product.id === id);\n    product[0].isActive = \"\";\n    const selectedProduct = product[0];\n    products.slice(id, 1, selectedProduct);\n    this.setState({\n      products\n    });\n  };\n\n  handleNumberOfItems = (e, id) => {\n    let products = [...this.state.products];\n    const product = products.filter(product => product.id === id);\n    this.activeInput = e.target.value;\n    product[0].activeInput = this.activeInput;\n    const selectedProduct = product[0];\n    products.slice(id, 1, selectedProduct);\n    this.setState({\n      products\n    });\n  };\n\n  handleAddToCart = id => {\n    if (!this.activeInput || this.activeInput < 1) return;\n    else {\n      let products = [...this.state.products];\n      const activeInput = parseInt(this.activeInput);\n      this.setState(prevState => ({\n        shoppingCart: prevState.shoppingCart + activeInput\n      }));\n      const product = products.filter(product => product.id === id);\n      this.activeInput = \"\";\n      product[0].activeInput = this.activeInput;\n      const selectedProduct = product[0];\n      products.slice(id, 1, selectedProduct);\n      this.setState({\n        products\n      });\n    }\n  };\n\n  render() {\n    const { products } = this.state;\n    return (\n      <div>\n        <Form\n          searchText={this.state.searchText}\n          handleSubmit={this.handleSubmit}\n          handleSearchText={this.handleSearchText}\n          onClick={this.componentDidMount.bind(this)}\n        />\n        <Cart shoppingCart={this.state.shoppingCart} />\n        <Pagination\n          activePage={this.state.activePage}\n          itemsCountPerPage={this.itemsCountPerPage}\n          totalItemsCount={this.state.searchProducts}\n          pageRangeDisplayed={5}\n          onChange={this.handlePageChange}\n        />\n        <ProductList\n          products={products}\n          handleShowModal={this.handleShowModal}\n          handleHideModal={this.handleHideModal}\n          shoppingCart={this.state.shoppingCart}\n          handleNumberOfItems={this.handleNumberOfItems}\n          handleAddToCart={this.handleAddToCart}\n        />\n        <Pagination\n          activePage={this.state.activePage}\n          itemsCountPerPage={this.itemsCountPerPage}\n          totalItemsCount={this.state.searchProducts}\n          pageRangeDisplayed={5}\n          onChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}